{
    "version": 2,
    "configurePresets": [
        {
            "name": "common-build-settings",
            "description": "Build settings that are common to all presets.",
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/build/${presetName}",
            "architecture": {
                "value": "x64",
                "strategy": "external"
            },
            "cacheVariables": {
                "CMAKE_TOOLCHAIN_FILE": {
                    "value": "${sourceDir}/external/vcpkg/scripts/buildsystems/vcpkg.cmake",
                    "type": "FILEPATH"
                },
                "CMAKE_INSTALL_PREFIX": "${sourceDir}/build/bin/${presetName}"
            },
            "hidden": true
        },
        {
            "name": "linux-remote",
            "displayName": "Linux Debug",
            "description": "Target the Windows Subsystem for Linux (WSL) or a remote Linux system.",
            "inherits": "common-build-settings",
            "vendor": {
                "microsoft.com/VisualStudioSettings/CMake/1.0": {
                    "hostOS": [
                        "Linux"
                    ]
                },
                "microsoft.com/VisualStudioRemoteSettings/CMake/1.0": {
                    "sourceDir": "$env{HOME}/.vs/$ms{projectDirName}"
                }
            },
            "hidden" : true
        },
        {
            "name": "windows-default",
            "description": "Target Windows with the Visual Studio development environment. Builds with MSVC.",
            "inherits": "common-build-settings",
            "vendor": {
                "microsoft.com/VisualStudioSettings/CMake/1.0": {
                    "hostOS": [
                        "Windows"
                    ]
                }
            },
            "hidden": true
        },
        {
            "name": "windows-clang",
            "description": "Target Windows with the Visual Studio development environment. Builds with Clang.",
            "inherits": "windows-default",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "clang-cl",
                "CMAKE_CXX_COMPILER": "clang-cl"
            },
            "vendor": {
                "microsoft.com/VisualStudioSettings/CMake/1.0": {
                    "hostOS": [
                        "Windows"
                    ],
                    "intelliSenseMode": "windows-clang-x64"
                }
            },
            "hidden": true
        },
        {
            "name": "windows-msvc-debug",
            "inherits": "windows-default",
            "displayName": "Windows MSVC Debug",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "EXTRA_FLAGS": "/DDEBUG /Od /bigobj /W4 /WX /EHsc /wd4996 /external:anglebrackets /experimental:external /external:W0"
            }
        },
        {
            "name": "windows-msvc-release",
            "inherits": "windows-default",
            "displayName": "Windows MSVC Release",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "EXTRA_FLAGS": "/O2 /favor:INTEL64 /W4 /WX /EHsc /wd4996 /external:anglebrackets /experimental:external /external:W0"
            }
        },
        {
            "name": "windows-clang-debug",
            "inherits": "windows-clang",
            "displayName": "Windows Clang Debug",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "EXTRA_FLAGS": "/Z7 /DDEBUG /Od /bigobj /EHsc -march=native -Wno-deprecated-declarations -Wall -Wextra -Weffc++ -Werror -Wpedantic -Wconversion -Wsign-conversion -Wno-format-security -Wno-format-nonliteral -Wno-c++98-compat-pedantic"
            }
        },
        {
            "name": "windows-clang-release",
            "inherits": "windows-clang",
            "displayName": "Windows Clang Release",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "EXTRA_FLAGS": "/O2 /EHsc -march=native -Wno-deprecated-declarations -Wall -Wextra -Weffc++ -Werror -Wpedantic -Wconversion -Wsign-conversion -Wno-format-security -Wno-format-nonliteral -Wno-c++98-compat-pedantic -Wno-missing-prototypes"
            }
        }
    ]
}
